{"ast":null,"code":"var _jsxFileName = \"/Users/darshansheth/Desktop/frontend2/my-app/src/components/progress-reacher/progress-reacher.js\";\nimport React, { useState } from \"react\";\nimport \"./progress-reacher.css\";\nimport axios from \"axios\"; // ID received from Rachita's code:\n\nvar id = localStorage.getItem(\"jobId\");\n\nconst Filler = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filler\",\n    style: {\n      width: `${props.percentage}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  });\n};\n\nconst ProgressBar = props => {\n  const [] = useState(true); // what does this do?\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Filler, {\n    percentage: props.percentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\n\nclass ProgressBarExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentage: 0\n    };\n    this.exampleReqs = this.exampleReqs.bind(this);\n  }\n\n  exampleReqs() {\n    axios.get(\"http://127.0.0.1:3000/items/\" + id + \"/\", {}).then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        if (response.data[i].id === id) {\n          localStorage.setItem(\"status\", response.data[i].status);\n        }\n      }\n    }, error => {\n      console.log(error);\n    });\n    var stat = localStorage.getItem(\"status\"); // var stat = 'complete'; ===> Used for testing\n\n    if (stat === \"started\") {\n      this.setState({\n        percentage: 0\n      });\n    } else if (stat === \"Unstarted\") {\n      this.setState({\n        percentage: 50\n      });\n    } else if (stat === \"complete\") {\n      this.setState({\n        percentage: 100\n      });\n    }\n  }\n\n  componentDidMount() {\n    //Fetch the API request every 4 seconds\n    console.log(this.exampleReqs());\n    this.interval = setInterval(() => {\n      this.exampleReqs(); //whatever function name that you've kept\n    }, 4000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ProgressBarExample; // Exported here","map":{"version":3,"sources":["/Users/darshansheth/Desktop/frontend2/my-app/src/components/progress-reacher/progress-reacher.js"],"names":["React","useState","axios","id","localStorage","getItem","Filler","props","width","percentage","ProgressBar","ProgressBarExample","Component","constructor","state","exampleReqs","bind","get","then","response","i","data","length","setItem","status","error","console","log","stat","setState","componentDidMount","interval","setInterval","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./progress-reacher.css\";\nimport axios from \"axios\";\n\n// ID received from Rachita's code:\nvar id = localStorage.getItem(\"jobId\");\n\nconst Filler = (props) => {\n  return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />;\n};\n\nconst ProgressBar = (props) => {\n  const [] = useState(true); // what does this do?\n\n  return (\n    <div className=\"progress-bar\">\n      <Filler percentage={props.percentage} />\n    </div>\n  );\n};\n\nclass ProgressBarExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      percentage: 0,\n    };\n\n    this.exampleReqs = this.exampleReqs.bind(this);\n  }\n\n  exampleReqs() {\n    axios.get(\"http://127.0.0.1:3000/items/\" + id + \"/\", {}).then(\n      (response) => {\n        for (var i = 0; i < response.data.length; i++) {\n          if (response.data[i].id === id) {\n            localStorage.setItem(\"status\", response.data[i].status);\n          }\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    var stat = localStorage.getItem(\"status\");\n    // var stat = 'complete'; ===> Used for testing\n    if (stat === \"started\") {\n      this.setState({ percentage: 0 });\n    } else if (stat === \"Unstarted\") {\n      this.setState({ percentage: 50 });\n    } else if (stat === \"complete\") {\n      this.setState({ percentage: 100 });\n    }\n  }\n\n  componentDidMount() {\n    //Fetch the API request every 4 seconds\n    console.log(this.exampleReqs());\n    this.interval = setInterval(() => {\n      this.exampleReqs(); //whatever function name that you've kept\n    }, 4000);\n  }\n\n  render() {\n    return (\n      <div>\n        <ProgressBar percentage={this.state.percentage} />\n      </div>\n    );\n  }\n}\n\nexport default ProgressBarExample; // Exported here\n"]},"metadata":{},"sourceType":"module"}