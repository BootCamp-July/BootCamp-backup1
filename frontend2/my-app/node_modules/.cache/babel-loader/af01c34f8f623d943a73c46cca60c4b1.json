{"ast":null,"code":"var _jsxFileName = \"/Users/darshansheth/Desktop/frontend2/my-app/src/components/progress-reacher/progress-reacher.js\";\nimport React, { useState } from \"react\";\nimport \"./progress-reacher.css\";\nimport axios from \"axios\"; // ID received from Rachita's code:\n\nvar id = localStorage.getItem(\"jobId\");\n\nconst Filler = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filler\",\n    style: {\n      width: `${props.percentage}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  });\n};\n\nconst ProgressBar = props => {\n  const [] = useState(true); // what does this do?\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Filler, {\n    percentage: props.percentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\n\nclass ProgressBarExample2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentage: 0\n    };\n    this.exampleReqs = this.exampleReqs.bind(this);\n  }\n\n  exampleReqs() {\n    axios.get(\"http://localhost:7000/items/\" + id + \"/\", {}).then(response => {\n      console.log(response.data.data.status);\n\n      if (response.data.data.status === \"started\") {\n        this.setState({\n          percentage: 0\n        });\n      } else if (response.data.data.status === \"inprog\") {\n        console.log(\"inprog\");\n        this.setState({\n          percentage: 50\n        });\n      } else if (response.data.data.status === \"completed\") {\n        this.setState({\n          percentage: 100\n        });\n      }\n    }, error => {\n      console.log(error);\n    }); // var stat = 'complete'; ===> Used for testing\n  }\n\n  componentDidMount() {\n    //Fetch the API request every 4 seconds\n    console.log(this.exampleReqs());\n    this.interval = setInterval(() => {\n      this.exampleReqs(); //whatever function name that you've kept\n    }, 4000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-reacher-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Status of your job\")), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      percentage: this.state.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default ProgressBarExample2; // Exported here","map":{"version":3,"sources":["/Users/darshansheth/Desktop/frontend2/my-app/src/components/progress-reacher/progress-reacher.js"],"names":["React","useState","axios","id","localStorage","getItem","Filler","props","width","percentage","ProgressBar","ProgressBarExample2","Component","constructor","state","exampleReqs","bind","get","then","response","console","log","data","status","setState","error","componentDidMount","interval","setInterval","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./progress-reacher.css\";\nimport axios from \"axios\";\n\n// ID received from Rachita's code:\nvar id = localStorage.getItem(\"jobId\");\n\nconst Filler = (props) => {\n  return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />;\n};\n\nconst ProgressBar = (props) => {\n  const [] = useState(true); // what does this do?\n\n  return (\n    <div className=\"progress-bar\">\n      <Filler percentage={props.percentage} />\n    </div>\n  );\n};\n\nclass ProgressBarExample2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      percentage: 0,\n    };\n\n    this.exampleReqs = this.exampleReqs.bind(this);\n  }\n\n  exampleReqs() {\n    axios.get(\"http://localhost:7000/items/\" + id + \"/\", {}).then(\n      (response) => {\n        console.log(response.data.data.status);\n\n        if (response.data.data.status === \"started\") {\n          this.setState({ percentage: 0 });\n        } else if (response.data.data.status === \"inprog\") {\n          console.log(\"inprog\");\n          this.setState({ percentage: 50 });\n        } else if (response.data.data.status === \"completed\") {\n          this.setState({ percentage: 100 });\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    // var stat = 'complete'; ===> Used for testing\n  }\n\n  componentDidMount() {\n    //Fetch the API request every 4 seconds\n    console.log(this.exampleReqs());\n    this.interval = setInterval(() => {\n      this.exampleReqs(); //whatever function name that you've kept\n    }, 4000);\n  }\n\n  render() {\n    return (\n      <div className=\"main-reacher-status\">\n        <br />\n        <br />\n        <center>\n          <h2>Status of your job</h2>\n        </center>\n        <center>\n          <ProgressBar percentage={this.state.percentage} />\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default ProgressBarExample2; // Exported here\n"]},"metadata":{},"sourceType":"module"}