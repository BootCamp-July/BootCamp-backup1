{"ast":null,"code":"var _jsxFileName = \"/Users/darshansheth/Desktop/frontend2/my-app/src/components/alert/alert.js\";\nimport React, { useState } from \"react\";\nimport { Alert } from \"reactstrap\";\nimport \"./alert.css\";\n\nconst Alertt = props => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  console.log(visible);\n\n  if (!setVisible) {\n    console.log(\"relod\");\n    window.location.href = \"/\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"al\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: props.type,\n    isOpen: visible,\n    toggle: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, props.message));\n};\n\nexport default Alertt;","map":{"version":3,"sources":["/Users/darshansheth/Desktop/frontend2/my-app/src/components/alert/alert.js"],"names":["React","useState","Alert","Alertt","props","visible","setVisible","onDismiss","console","log","window","location","href","type","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMM,SAAS,GAAG,MAAMD,UAAU,CAAC,KAAD,CAAlC;;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,MAAI,CAACC,UAAL,EAAiB;AACfE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,KAAK,CAACS,IAApB;AAA0B,IAAA,MAAM,EAAER,OAAlC;AAA2C,IAAA,MAAM,EAAEE,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACU,OADT,CADF,CADF;AAOD,CAlBD;;AAoBA,eAAeX,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Alert } from \"reactstrap\";\nimport \"./alert.css\";\n\nconst Alertt = (props) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  console.log(visible);\n  if (!setVisible) {\n    console.log(\"relod\");\n    window.location.href = \"/\";\n  }\n\n  return (\n    <div className=\"al\">\n      <Alert color={props.type} isOpen={visible} toggle={onDismiss}>\n        {props.message}\n      </Alert>\n    </div>\n  );\n};\n\nexport default Alertt;\n"]},"metadata":{},"sourceType":"module"}