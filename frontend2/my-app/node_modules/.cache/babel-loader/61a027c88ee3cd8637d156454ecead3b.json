{"ast":null,"code":"var _jsxFileName = \"/Users/darshansheth/Desktop/frontend2/my-app/src/components/login-component/login-component.js\";\nimport Login from \"../login/login\";\nimport Register from \"../register/register\";\nimport { Row, Col } from \"reactstrap\";\nimport \"./login-component.css\";\nimport Alertt from \"../alert/alert\";\nimport React, { useState } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loggedIn, logout } from \"../../actions/loginAction\";\n\nfunction Temp() {\n  //set login state - redux\n  const isLogged = useSelector(state => state.isLogged[\"state\"]); //view user login state\n\n  const dispatch = useDispatch(); //toggle\n\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const [showError, setShow] = useState(false);\n  const [showRegistrationError, setShow3] = useState(false);\n  const [showRegistrationSuccess, setShow4] = useState(false);\n\n  const userLogin = token => {\n    var a = token;\n    var resp = [];\n\n    if (token.token) {\n      console.log(\"token\", token);\n      dispatch(loggedIn()); //redux set logged in state as 1\n      //window.location.href = \"/loggedin\";\n    } else {\n      setShow(true); //\n    }\n  };\n\n  const userRegister = status => {\n    if (status === \"error\") {\n      setShow3(true);\n    } else {\n      setShow4(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"main-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, showError ? /*#__PURE__*/React.createElement(Alertt, {\n    className: \"alert\",\n    type: \"danger\",\n    message: \"login failed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, showRegistrationError ? /*#__PURE__*/React.createElement(Alertt, {\n    className: \"alert\",\n    type: \"danger\",\n    message: \"registration failed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 36\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, showRegistrationSuccess ? /*#__PURE__*/React.createElement(Alertt, {\n    className: \"alert\",\n    type: \"success\",\n    message: \"registration success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 36\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    className: \"nav-item-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"1\"\n    }),\n    onClick: () => {\n      toggle(\"1\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(NavItem, {\n    className: \"nav-item-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === \"2\"\n    }),\n    onClick: () => {\n      toggle(\"2\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Register\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    userlogin: userLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    userRegister: userRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Temp;","map":{"version":3,"sources":["/Users/darshansheth/Desktop/frontend2/my-app/src/components/login-component/login-component.js"],"names":["Login","Register","Row","Col","Alertt","React","useState","TabContent","TabPane","Nav","NavItem","NavLink","Button","classnames","useSelector","useDispatch","loggedIn","logout","Temp","isLogged","state","dispatch","activeTab","setActiveTab","toggle","tab","showError","setShow","showRegistrationError","setShow3","showRegistrationSuccess","setShow4","userLogin","token","a","resp","console","log","userRegister","status","active"],"mappings":"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","sourcesContent":["import Login from \"../login/login\";\nimport Register from \"../register/register\";\nimport { Row, Col } from \"reactstrap\";\nimport \"./login-component.css\";\nimport Alertt from \"../alert/alert\";\nimport React, { useState } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loggedIn, logout } from \"../../actions/loginAction\";\n\nfunction Temp() {\n  //set login state - redux\n  const isLogged = useSelector((state) => state.isLogged[\"state\"]); //view user login state\n  const dispatch = useDispatch();\n\n  //toggle\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const [showError, setShow] = useState(false);\n\n  const [showRegistrationError, setShow3] = useState(false);\n  const [showRegistrationSuccess, setShow4] = useState(false);\n\n  const userLogin = (token) => {\n    var a = token;\n\n    var resp = [];\n    if (token.token) {\n      console.log(\"token\", token);\n      dispatch(loggedIn()); //redux set logged in state as 1\n      //window.location.href = \"/loggedin\";\n    } else {\n      setShow(true); //\n    }\n  };\n\n  const userRegister = (status) => {\n    if (status === \"error\") {\n      setShow3(true);\n    } else {\n      setShow4(true);\n    }\n  };\n\n  return (\n    <div id=\"main-div\">\n      {/* prettier-ignore */}\n      <Row> \n        {showError ? ( <Alertt className=\"alert\" type={\"danger\"} message={\"login failed\"}  />) : (<></>)}\n         \n      </Row>\n      {/* prettier-ignore */}\n      <Row> \n        {showRegistrationError ? ( <Alertt className=\"alert\" type={\"danger\"} message={\"registration failed\"} />) : (<></>)}\n      </Row>\n      {/* prettier-ignore */}\n      <Row>\n      {showRegistrationSuccess ? ( <Alertt className=\"alert\" type={\"success\"} message={\"registration success\"} />) : (<></>)}\n      </Row>\n      <div className=\"login-component\">\n        <Nav tabs className=\"nav\">\n          <NavItem className=\"nav-item-1\">\n            <NavLink\n              className={classnames({ active: activeTab === \"1\" })}\n              onClick={() => {\n                toggle(\"1\");\n              }}\n            >\n              Login\n            </NavLink>\n          </NavItem>\n          <NavItem className=\"nav-item-2\">\n            <NavLink\n              className={classnames({ active: activeTab === \"2\" })}\n              onClick={() => {\n                toggle(\"2\");\n              }}\n            >\n              Register\n            </NavLink>\n          </NavItem>\n        </Nav>\n\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Login userlogin={userLogin} />\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Register userRegister={userRegister} />\n          </TabPane>\n        </TabContent>\n      </div>\n    </div>\n  );\n}\n\nexport default Temp;\n"]},"metadata":{},"sourceType":"module"}